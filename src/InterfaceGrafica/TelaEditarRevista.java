/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package InterfaceGrafica;

import TipoDados.Emprestimo;
import TipoDados.Revista;
import java.awt.Color;
import java.awt.HeadlessException;
import java.awt.event.ActionEvent;
import java.io.EOFException;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.util.ArrayList;
import javax.swing.JOptionPane;

/**
 *
 * @author Fernando TeTz
 */
public class TelaEditarRevista extends ModeloAdicionar {

    ArrayList<Revista> revistas = new ArrayList<>();
    ArrayList<Emprestimo> emprestimos = new ArrayList<>();
    Revista revista = null;
    String[] meses = {"Mês", "Janeiro", "Fevereiro", "Março", "Abril", "Maio", "Junho",
        "Julho", "Agosto", "Setembro", "Outubro", "Novembro", "Dezembro"};
    int qntdEmprestados = 0;

    public TelaEditarRevista() {
        try {
            lerArquivo();
        } catch (Exception e) {
        }
        try {
            lerArquivoEmprestimo();
        } catch (Exception e) {
        }
        initComponents();
        setLocationRelativeTo(null);
        setModal(true);
        labelID.setText(Integer.toString(TelaManutençãoRevista.getRevista().getIDAcervo()));
        labelTitulo.setText(TelaManutençãoRevista.getRevista().getTitulo());
        nQtde.setValue(TelaManutençãoRevista.getRevista().getQtdeExemplar());
        labelDia.setText(Integer.toString(TelaManutençãoRevista.getRevista().getDataEdicao().getDia()));
        labelMes.setText(meses[TelaManutençãoRevista.getRevista().getDataEdicao().getMes()]);
        labelAno.setText(Integer.toString(TelaManutençãoRevista.getRevista().getDataEdicao().getAno()));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        labelDataEdicao = new javax.swing.JLabel();
        labelQtd = new javax.swing.JLabel();
        nQtde = new javax.swing.JSpinner();
        jLabel6 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        labelTitulo = new javax.swing.JLabel();
        labelDia = new javax.swing.JLabel();
        labelMes = new javax.swing.JLabel();
        labelAno = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        labelID = new javax.swing.JLabel();

        setTitle("Editar revista");

        jLabel1.setText("Título:");

        labelDataEdicao.setText("Data de edição:");

        labelQtd.setText("* Nº de exemplares:");

        nQtde.setModel(new javax.swing.SpinnerNumberModel(0, 0, null, 1));

        jLabel6.setText("/");

        jLabel8.setText("/");

        labelTitulo.setText("jLabel9");

        labelDia.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelDia.setText("jLabel2");

        labelMes.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelMes.setText("jLabel3");
        labelMes.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        labelAno.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelAno.setText("jLabel5");

        jLabel2.setText("ID:");

        labelID.setText("labelID");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(labelQtd)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(nQtde, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(labelDataEdicao)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(labelDia, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel6)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(labelMes, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 4, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(labelAno, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(labelID)))
                        .addGap(280, 280, 280))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(labelTitulo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(4, 4, 4)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(labelID))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(labelTitulo))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelDataEdicao)
                    .addComponent(jLabel6)
                    .addComponent(jLabel8)
                    .addComponent(labelDia)
                    .addComponent(labelMes)
                    .addComponent(labelAno))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelQtd)
                    .addComponent(nQtde, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(14, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel1, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void lerArquivo() throws Exception {
        ObjectInputStream arquivo = null;
        Revista revistax = null;
        revistas.clear();
        try {
            arquivo = new ObjectInputStream(new FileInputStream("ArqRevistas.dad"));
            do {
                revistax = (Revista) arquivo.readObject();
                revistas.add(revistax);
            } while (revistax != null);
        } catch (EOFException e) {
            arquivo.close();
        }
    }

    private void lerArquivoEmprestimo() throws Exception {
        ObjectInputStream arquivo = null;
        Emprestimo emprestimox = null;
        emprestimos.clear();
        try {
            arquivo = new ObjectInputStream(new FileInputStream("ArqEmprestimos.dad"));
            do {
                emprestimox = (Emprestimo) arquivo.readObject();
                emprestimos.add(emprestimox);
            } while (emprestimox != null);
        } catch (EOFException e) {
            arquivo.close();
        }
    }

    @Override
    public void bSalvarActionListener(ActionEvent evt) {
        try {
            int result = JOptionPane.showConfirmDialog(null, "Tem certeza que deseja editar a revista?");
            if (result == 0) { //Resposta SIM
                for (int i = 0; i < emprestimos.size(); i++) {
                    if (emprestimos.get(i).getExemplar().getIDAcervo() == TelaManutençãoRevista.revista.getIDAcervo()) {
                        qntdEmprestados++;
                    }
                }
                if ((Integer) nQtde.getValue() == 0) {
                    labelQtd.setForeground(Color.red);
                    JOptionPane.showMessageDialog(null, "O número de exemplares deve ser maior que zero (0)!",
                            "NUMERO DE EXEMPLARES NAO PERMITIDO!", JOptionPane.INFORMATION_MESSAGE);
                    return;
                } else if ((Integer) nQtde.getValue() < qntdEmprestados) {
                    JOptionPane.showMessageDialog(null, "Não é possível diminuir a quantidade do exemplar abaixo de "
                            + qntdEmprestados + ", pois os mesmos estão emprestados.",
                            "EXEMPLARES EMPRESTADOS!", JOptionPane.ERROR_MESSAGE);
                    return;
                }
                String aux = null;
                for (int i = 0; i < revistas.size(); i++) {
                    if (revistas.get(i).getIDAcervo() == Integer.parseInt(labelID.getText())) {
                        revistas.get(i).setQtdeExemplar((Integer) nQtde.getValue());
                    }
                }
                gravaArquivo();
                LimpaCampos();
                JOptionPane.showMessageDialog(null, "Revista editada com sucesso.", "EDIÇÃO DE REVISTA",
                        JOptionPane.INFORMATION_MESSAGE);
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Erro ao gravar em ArqRevistas.biblio\n" + ex.getMessage(),
                    "Tela de erro", JOptionPane.ERROR_MESSAGE);
        }
        this.dispose();
    }

    @Override
    public void bLimparActionListener(ActionEvent evt) {
        int result = JOptionPane.showConfirmDialog(null, "Tem certeza que deseja limpar tudo?");
        if (result == 0) { //Resposta SIM
            LimpaCampos();
        }
    }

    @Override
    public void bCancelarActionListener(ActionEvent evt) {
        int result;
        try {
            result = JOptionPane.showConfirmDialog(null, "Tem certeza que deseja sair da operação?",
                    "CANCELAR", JOptionPane.YES_NO_OPTION);
            if (result == 0) {
                this.dispose();
            }
        } catch (HeadlessException e) {
            JOptionPane.showMessageDialog(this, e.getMessage(), "Tela de erro", JOptionPane.ERROR_MESSAGE);
        }
    }

    private void gravaArquivo() throws Exception {
        try {
            ObjectOutputStream arquivo = new ObjectOutputStream(new FileOutputStream("ArqRevistas.dad"));
            for (Revista revistax : revistas) {
                arquivo.writeObject(revistax);
            }
        } catch (IOException e) {
            JOptionPane.showMessageDialog(null, "Erro ao gravar arquivo.", "ERRO", JOptionPane.ERROR_MESSAGE);
        }
    }

    public void LimpaCampos() {
        nQtde.setValue(0);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel labelAno;
    private javax.swing.JLabel labelDataEdicao;
    private javax.swing.JLabel labelDia;
    private javax.swing.JLabel labelID;
    private javax.swing.JLabel labelMes;
    private javax.swing.JLabel labelQtd;
    private javax.swing.JLabel labelTitulo;
    private javax.swing.JSpinner nQtde;
    // End of variables declaration//GEN-END:variables

}
